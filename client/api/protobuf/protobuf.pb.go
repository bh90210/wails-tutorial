// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type CPUStatsRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPUStatsRequest) Reset()         { *m = CPUStatsRequest{} }
func (m *CPUStatsRequest) String() string { return proto.CompactTextString(m) }
func (*CPUStatsRequest) ProtoMessage()    {}
func (*CPUStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c77a803fcbc0c059, []int{0}
}

func (m *CPUStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPUStatsRequest.Unmarshal(m, b)
}
func (m *CPUStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPUStatsRequest.Marshal(b, m, deterministic)
}
func (m *CPUStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPUStatsRequest.Merge(m, src)
}
func (m *CPUStatsRequest) XXX_Size() int {
	return xxx_messageInfo_CPUStatsRequest.Size(m)
}
func (m *CPUStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CPUStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CPUStatsRequest proto.InternalMessageInfo

func (m *CPUStatsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type CPUStatsReply struct {
	Percentage           int32    `protobuf:"varint,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	User                 float64  `protobuf:"fixed64,2,opt,name=user,proto3" json:"user,omitempty"`
	System               float64  `protobuf:"fixed64,3,opt,name=system,proto3" json:"system,omitempty"`
	Idle                 float64  `protobuf:"fixed64,4,opt,name=idle,proto3" json:"idle,omitempty"`
	Nice                 float64  `protobuf:"fixed64,5,opt,name=nice,proto3" json:"nice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPUStatsReply) Reset()         { *m = CPUStatsReply{} }
func (m *CPUStatsReply) String() string { return proto.CompactTextString(m) }
func (*CPUStatsReply) ProtoMessage()    {}
func (*CPUStatsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c77a803fcbc0c059, []int{1}
}

func (m *CPUStatsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPUStatsReply.Unmarshal(m, b)
}
func (m *CPUStatsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPUStatsReply.Marshal(b, m, deterministic)
}
func (m *CPUStatsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPUStatsReply.Merge(m, src)
}
func (m *CPUStatsReply) XXX_Size() int {
	return xxx_messageInfo_CPUStatsReply.Size(m)
}
func (m *CPUStatsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CPUStatsReply.DiscardUnknown(m)
}

var xxx_messageInfo_CPUStatsReply proto.InternalMessageInfo

func (m *CPUStatsReply) GetPercentage() int32 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

func (m *CPUStatsReply) GetUser() float64 {
	if m != nil {
		return m.User
	}
	return 0
}

func (m *CPUStatsReply) GetSystem() float64 {
	if m != nil {
		return m.System
	}
	return 0
}

func (m *CPUStatsReply) GetIdle() float64 {
	if m != nil {
		return m.Idle
	}
	return 0
}

func (m *CPUStatsReply) GetNice() float64 {
	if m != nil {
		return m.Nice
	}
	return 0
}

func init() {
	proto.RegisterType((*CPUStatsRequest)(nil), "protobuf.CPUStatsRequest")
	proto.RegisterType((*CPUStatsReply)(nil), "protobuf.CPUStatsReply")
}

func init() { proto.RegisterFile("protobuf.proto", fileDescriptor_c77a803fcbc0c059) }

var fileDescriptor_c77a803fcbc0c059 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x03, 0x33, 0x84, 0x38, 0x60, 0x7c, 0x25, 0x55, 0x2e, 0x7e, 0xe7,
	0x80, 0xd0, 0xe0, 0x92, 0xc4, 0x92, 0xe2, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x21,
	0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0xa9,
	0x99, 0x91, 0x8b, 0x17, 0xa1, 0xae, 0x20, 0xa7, 0x52, 0x48, 0x8e, 0x8b, 0xab, 0x20, 0xb5, 0x28,
	0x39, 0x35, 0xaf, 0x24, 0x31, 0x1d, 0xa2, 0x96, 0x35, 0x08, 0x49, 0x04, 0x64, 0x4a, 0x69, 0x71,
	0x6a, 0x91, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x63, 0x10, 0x98, 0x2d, 0x24, 0xc6, 0xc5, 0x56, 0x5c,
	0x59, 0x5c, 0x92, 0x9a, 0x2b, 0xc1, 0x0c, 0x16, 0x85, 0xf2, 0x40, 0x6a, 0x33, 0x53, 0x72, 0x52,
	0x25, 0x58, 0x20, 0x6a, 0x41, 0x6c, 0xb0, 0x2b, 0x32, 0x93, 0x53, 0x25, 0x58, 0x21, 0x62, 0x20,
	0xb6, 0x51, 0x10, 0x17, 0xa7, 0x67, 0x5e, 0x49, 0x6a, 0x51, 0x72, 0x7e, 0x6e, 0xae, 0x90, 0x2b,
	0x17, 0xb7, 0x7b, 0x6a, 0x09, 0xcc, 0x51, 0x42, 0x92, 0x7a, 0x70, 0x3f, 0xa2, 0x79, 0x48, 0x4a,
	0x1c, 0x9b, 0x54, 0x41, 0x4e, 0xa5, 0x12, 0x83, 0x01, 0x63, 0x12, 0x1b, 0x58, 0xce, 0x18, 0x10,
	0x00, 0x00, 0xff, 0xff, 0x77, 0x22, 0x09, 0xa6, 0x23, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IntercommClient is the client API for Intercomm service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IntercommClient interface {
	// Sends a greeting
	GetCPUStats(ctx context.Context, in *CPUStatsRequest, opts ...grpc.CallOption) (Intercomm_GetCPUStatsClient, error)
}

type intercommClient struct {
	cc *grpc.ClientConn
}

func NewIntercommClient(cc *grpc.ClientConn) IntercommClient {
	return &intercommClient{cc}
}

func (c *intercommClient) GetCPUStats(ctx context.Context, in *CPUStatsRequest, opts ...grpc.CallOption) (Intercomm_GetCPUStatsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Intercomm_serviceDesc.Streams[0], "/protobuf.Intercomm/GetCPUStats", opts...)
	if err != nil {
		return nil, err
	}
	x := &intercommGetCPUStatsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Intercomm_GetCPUStatsClient interface {
	Recv() (*CPUStatsReply, error)
	grpc.ClientStream
}

type intercommGetCPUStatsClient struct {
	grpc.ClientStream
}

func (x *intercommGetCPUStatsClient) Recv() (*CPUStatsReply, error) {
	m := new(CPUStatsReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IntercommServer is the server API for Intercomm service.
type IntercommServer interface {
	// Sends a greeting
	GetCPUStats(*CPUStatsRequest, Intercomm_GetCPUStatsServer) error
}

func RegisterIntercommServer(s *grpc.Server, srv IntercommServer) {
	s.RegisterService(&_Intercomm_serviceDesc, srv)
}

func _Intercomm_GetCPUStats_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CPUStatsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IntercommServer).GetCPUStats(m, &intercommGetCPUStatsServer{stream})
}

type Intercomm_GetCPUStatsServer interface {
	Send(*CPUStatsReply) error
	grpc.ServerStream
}

type intercommGetCPUStatsServer struct {
	grpc.ServerStream
}

func (x *intercommGetCPUStatsServer) Send(m *CPUStatsReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Intercomm_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Intercomm",
	HandlerType: (*IntercommServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetCPUStats",
			Handler:       _Intercomm_GetCPUStats_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf.proto",
}
