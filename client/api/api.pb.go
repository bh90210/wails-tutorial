// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type File struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size                 int32    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *File) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type UploadReply struct {
	Feedback             string   `protobuf:"bytes,1,opt,name=feedback,proto3" json:"feedback,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadReply) Reset()         { *m = UploadReply{} }
func (m *UploadReply) String() string { return proto.CompactTextString(m) }
func (*UploadReply) ProtoMessage()    {}
func (*UploadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *UploadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadReply.Unmarshal(m, b)
}
func (m *UploadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadReply.Marshal(b, m, deterministic)
}
func (m *UploadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadReply.Merge(m, src)
}
func (m *UploadReply) XXX_Size() int {
	return xxx_messageInfo_UploadReply.Size(m)
}
func (m *UploadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadReply.DiscardUnknown(m)
}

var xxx_messageInfo_UploadReply proto.InternalMessageInfo

func (m *UploadReply) GetFeedback() string {
	if m != nil {
		return m.Feedback
	}
	return ""
}

type DownloadRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadRequest) Reset()         { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()    {}
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *DownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequest.Unmarshal(m, b)
}
func (m *DownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequest.Marshal(b, m, deterministic)
}
func (m *DownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequest.Merge(m, src)
}
func (m *DownloadRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadRequest.Size(m)
}
func (m *DownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequest proto.InternalMessageInfo

func (m *DownloadRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *DownloadRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteReply struct {
	Feedback             string   `protobuf:"bytes,1,opt,name=feedback,proto3" json:"feedback,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReply) Reset()         { *m = DeleteReply{} }
func (m *DeleteReply) String() string { return proto.CompactTextString(m) }
func (*DeleteReply) ProtoMessage()    {}
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *DeleteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReply.Unmarshal(m, b)
}
func (m *DeleteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReply.Marshal(b, m, deterministic)
}
func (m *DeleteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReply.Merge(m, src)
}
func (m *DeleteReply) XXX_Size() int {
	return xxx_messageInfo_DeleteReply.Size(m)
}
func (m *DeleteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReply proto.InternalMessageInfo

func (m *DeleteReply) GetFeedback() string {
	if m != nil {
		return m.Feedback
	}
	return ""
}

type ListFilesRequest struct {
	List                 bool     `protobuf:"varint,1,opt,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFilesRequest) Reset()         { *m = ListFilesRequest{} }
func (m *ListFilesRequest) String() string { return proto.CompactTextString(m) }
func (*ListFilesRequest) ProtoMessage()    {}
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *ListFilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilesRequest.Unmarshal(m, b)
}
func (m *ListFilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilesRequest.Marshal(b, m, deterministic)
}
func (m *ListFilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilesRequest.Merge(m, src)
}
func (m *ListFilesRequest) XXX_Size() int {
	return xxx_messageInfo_ListFilesRequest.Size(m)
}
func (m *ListFilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilesRequest proto.InternalMessageInfo

func (m *ListFilesRequest) GetList() bool {
	if m != nil {
		return m.List
	}
	return false
}

func init() {
	proto.RegisterType((*File)(nil), "api.File")
	proto.RegisterType((*UploadReply)(nil), "api.UploadReply")
	proto.RegisterType((*DownloadRequest)(nil), "api.DownloadRequest")
	proto.RegisterType((*DeleteReply)(nil), "api.DeleteReply")
	proto.RegisterType((*ListFilesRequest)(nil), "api.ListFilesRequest")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcf, 0x4a, 0xf4, 0x30,
	0x14, 0xc5, 0x9b, 0x6f, 0xfa, 0x95, 0xf6, 0x2a, 0x38, 0x5c, 0x14, 0x4a, 0x57, 0x25, 0x0b, 0xed,
	0x2c, 0x1c, 0xfc, 0xb3, 0x72, 0x3f, 0x08, 0x82, 0xab, 0x80, 0xee, 0x33, 0xd3, 0x2b, 0x06, 0xd3,
	0x26, 0x4e, 0x22, 0xa2, 0x6f, 0xe7, 0x9b, 0x49, 0x52, 0x1d, 0xeb, 0xb8, 0xd0, 0xdd, 0xc9, 0xe1,
	0xe4, 0x9e, 0xfb, 0x4b, 0xa0, 0x90, 0x56, 0xcd, 0xed, 0xda, 0x78, 0x83, 0x13, 0x69, 0x15, 0xbf,
	0x85, 0xf4, 0x52, 0x69, 0x42, 0x84, 0xd4, 0x4a, 0x7f, 0x5f, 0xb2, 0x9a, 0x35, 0x85, 0x88, 0x3a,
	0x78, 0xbd, 0xec, 0xa8, 0xfc, 0x37, 0x78, 0x41, 0x07, 0xcf, 0xa9, 0x57, 0x2a, 0x27, 0x35, 0x6b,
	0xfe, 0x8b, 0xa8, 0x83, 0xd7, 0x4a, 0x2f, 0xcb, 0xb4, 0x66, 0xcd, 0xae, 0x88, 0x9a, 0xcf, 0x60,
	0xe7, 0xc6, 0x6a, 0x23, 0x5b, 0x41, 0x56, 0xbf, 0x60, 0x05, 0xf9, 0x1d, 0x51, 0xbb, 0x94, 0xab,
	0x87, 0x8f, 0x8a, 0xcd, 0x99, 0x5f, 0xc0, 0xde, 0xc2, 0x3c, 0xf7, 0x43, 0xf8, 0xf1, 0x89, 0x9c,
	0xff, 0xeb, 0x36, 0xa1, 0x65, 0x41, 0x9a, 0x3c, 0xfd, 0xde, 0x72, 0x08, 0xd3, 0x6b, 0xe5, 0x7c,
	0x80, 0x75, 0xa3, 0x1a, 0xad, 0x9c, 0x8f, 0xd9, 0x5c, 0x44, 0x7d, 0xf6, 0xc6, 0xa0, 0xb8, 0xea,
	0x3d, 0xad, 0x57, 0xa6, 0xeb, 0x70, 0x06, 0xd9, 0x80, 0x81, 0xc5, 0x3c, 0xbc, 0x5c, 0xb8, 0x5e,
	0x4d, 0xa3, 0x1c, 0xe1, 0xf1, 0xa4, 0x61, 0x78, 0x0c, 0xf9, 0x27, 0x06, 0xee, 0xc7, 0xc4, 0x16,
	0x55, 0xf5, 0x35, 0x82, 0x27, 0x78, 0x04, 0xd9, 0xb0, 0xfa, 0xcf, 0xc9, 0x23, 0x24, 0x9e, 0xe0,
	0x29, 0x14, 0x9b, 0xc5, 0xf1, 0x20, 0x06, 0xb6, 0x41, 0xbe, 0x4d, 0x3e, 0x61, 0xcb, 0x2c, 0x7e,
	0xf0, 0xf9, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x85, 0x01, 0xd4, 0x2b, 0xed, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IntercommClient is the client API for Intercomm service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IntercommClient interface {
	Upload(ctx context.Context, opts ...grpc.CallOption) (Intercomm_UploadClient, error)
	Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*File, error)
	Delete(ctx context.Context, in *File, opts ...grpc.CallOption) (*DeleteReply, error)
	ListFiles(ctx context.Context, in *ListFilesRequest, opts ...grpc.CallOption) (Intercomm_ListFilesClient, error)
}

type intercommClient struct {
	cc *grpc.ClientConn
}

func NewIntercommClient(cc *grpc.ClientConn) IntercommClient {
	return &intercommClient{cc}
}

func (c *intercommClient) Upload(ctx context.Context, opts ...grpc.CallOption) (Intercomm_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Intercomm_serviceDesc.Streams[0], "/api.Intercomm/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &intercommUploadClient{stream}
	return x, nil
}

type Intercomm_UploadClient interface {
	Send(*File) error
	CloseAndRecv() (*UploadReply, error)
	grpc.ClientStream
}

type intercommUploadClient struct {
	grpc.ClientStream
}

func (x *intercommUploadClient) Send(m *File) error {
	return x.ClientStream.SendMsg(m)
}

func (x *intercommUploadClient) CloseAndRecv() (*UploadReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *intercommClient) Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*File, error) {
	out := new(File)
	err := c.cc.Invoke(ctx, "/api.Intercomm/Download", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intercommClient) Delete(ctx context.Context, in *File, opts ...grpc.CallOption) (*DeleteReply, error) {
	out := new(DeleteReply)
	err := c.cc.Invoke(ctx, "/api.Intercomm/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intercommClient) ListFiles(ctx context.Context, in *ListFilesRequest, opts ...grpc.CallOption) (Intercomm_ListFilesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Intercomm_serviceDesc.Streams[1], "/api.Intercomm/ListFiles", opts...)
	if err != nil {
		return nil, err
	}
	x := &intercommListFilesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Intercomm_ListFilesClient interface {
	Recv() (*File, error)
	grpc.ClientStream
}

type intercommListFilesClient struct {
	grpc.ClientStream
}

func (x *intercommListFilesClient) Recv() (*File, error) {
	m := new(File)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IntercommServer is the server API for Intercomm service.
type IntercommServer interface {
	Upload(Intercomm_UploadServer) error
	Download(context.Context, *DownloadRequest) (*File, error)
	Delete(context.Context, *File) (*DeleteReply, error)
	ListFiles(*ListFilesRequest, Intercomm_ListFilesServer) error
}

// UnimplementedIntercommServer can be embedded to have forward compatible implementations.
type UnimplementedIntercommServer struct {
}

func (*UnimplementedIntercommServer) Upload(srv Intercomm_UploadServer) error {
	return status.Errorf(codes.Unimplemented, "method Upload not implemented")
}
func (*UnimplementedIntercommServer) Download(ctx context.Context, req *DownloadRequest) (*File, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Download not implemented")
}
func (*UnimplementedIntercommServer) Delete(ctx context.Context, req *File) (*DeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedIntercommServer) ListFiles(req *ListFilesRequest, srv Intercomm_ListFilesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListFiles not implemented")
}

func RegisterIntercommServer(s *grpc.Server, srv IntercommServer) {
	s.RegisterService(&_Intercomm_serviceDesc, srv)
}

func _Intercomm_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IntercommServer).Upload(&intercommUploadServer{stream})
}

type Intercomm_UploadServer interface {
	SendAndClose(*UploadReply) error
	Recv() (*File, error)
	grpc.ServerStream
}

type intercommUploadServer struct {
	grpc.ServerStream
}

func (x *intercommUploadServer) SendAndClose(m *UploadReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *intercommUploadServer) Recv() (*File, error) {
	m := new(File)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Intercomm_Download_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntercommServer).Download(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Intercomm/Download",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntercommServer).Download(ctx, req.(*DownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intercomm_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(File)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntercommServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Intercomm/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntercommServer).Delete(ctx, req.(*File))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intercomm_ListFiles_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListFilesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IntercommServer).ListFiles(m, &intercommListFilesServer{stream})
}

type Intercomm_ListFilesServer interface {
	Send(*File) error
	grpc.ServerStream
}

type intercommListFilesServer struct {
	grpc.ServerStream
}

func (x *intercommListFilesServer) Send(m *File) error {
	return x.ServerStream.SendMsg(m)
}

var _Intercomm_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Intercomm",
	HandlerType: (*IntercommServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Download",
			Handler:    _Intercomm_Download_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Intercomm_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _Intercomm_Upload_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ListFiles",
			Handler:       _Intercomm_ListFiles_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
